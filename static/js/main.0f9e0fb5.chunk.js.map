{"version":3,"sources":["components/Clock.js","components/TodayCalendar.js","components/Weather.js","components/ToDoList/store.js","components/ToDoList/ToDo.js","components/ToDoList/ToDoList.js","components/Links.js","App.js","index.js"],"names":["Clock","useState","Date","time","setValue","useEffect","interval","setInterval","clearInterval","hours","getHours","minutes","getMinutes","period","className","TodayCalendar","value","onChange","Weather","current","setCurrent","forecast","setForecast","getCurrentWeather","lat","lon","url","process","fetch","then","response","json","data","location","name","temp","Math","round","main","description","weather","icon","getForecastWeather","daily","map","item","id","dt","day","toLocaleString","weekday","minTemp","min","maxTemp","max","handleGeoSuccess","position","latitude","coords","longitude","coordObj","localStorage","setItem","JSON","stringify","saveCoords","handleGeoError","console","log","loadCoords","loadedCoords","getItem","navigator","geolocation","getCurrentPosition","parsedCoords","parse","src","alt","TODOS_LS","loadedToDos","toDos","createSlice","initialState","reducers","addToDo","state","action","text","payload","now","completed","deleteToDo","filter","toDo","completeToDo","store","createStore","reducer","actions","subscribe","getState","saveLocalStorage","connect","dispatch","ownProps","onClick","setText","onSubmit","e","preventDefault","type","target","required","key","Links","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f9e0fb5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Clock.css';\n\nconst Clock = () => {\n  const [time, setValue] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => setValue(new Date()), 1000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  let hours = time.getHours();\n  let minutes = time.getMinutes();\n  const period = hours < 12 ? \"AM\" : \"PM\";\n  if (hours === 0) {\n    hours = 12;\n  } else if (hours > 12) {\n    hours = hours - 12;\n  } \n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n  return (\n    <div className=\"clock\">\n      <span className=\"hours\">{hours}:</span>\n      <span className=\"minutes\">{minutes}</span>\n      <span className=\"period\">{period}</span>\n    </div>\n  );\n}\n\nexport default Clock;","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./TodayCalendar.css\"\n\nconst TodayCalendar = () => {\n  const [value, onChange] = useState(new Date());\n  return (\n    <Calendar onChange={onChange}\n        value={value}/>\n  );\n}\n\nexport default TodayCalendar;","import React, { useState, useEffect } from 'react';\nimport './Weather.css';\n\nconst Weather = () => {\n  const [current, setCurrent] = useState({});\n  const [forecast, setForecast] = useState([]);\n\n  const getCurrentWeather = (lat, lon) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial`;\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCurrent({ \n        location: data.name,\n        temp: Math.round(data.main.temp),\n        description: data.weather[0].main,\n        icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n      });\n    });\n  }\n\n  const getForecastWeather = (lat, lon) => {\n    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,alerts&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial`;\n    fetch(url)\n    .then(response => response.json())\n    .then(data => data.daily.map(\n      item => {\n        return {\n          id: item.dt,\n          day: new Date(item.dt * 1000).toLocaleString(\"en-us\", { weekday: \"short\" }),\n          icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n          minTemp: Math.round(item.temp.min),\n          maxTemp: Math.round(item.temp.max),\n        }\n      }\n    ))\n    .then(weather => {\n      weather[0].day = \"Today\";\n      setForecast(weather);\n    });\n  }\n\n  const saveCoords = coordObj => {\n    localStorage.setItem(\"coords\", JSON.stringify(coordObj));\n  }\n\n  const handleGeoSuccess = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const coordObj = {\n      latitude,\n      longitude\n    };\n    saveCoords(coordObj);\n    getCurrentWeather(latitude, longitude);\n    getForecastWeather(latitude, longitude);\n  }\n\n  const handleGeoError = () => {\n    console.log(\"Cant access geo location\");\n  }\n\n  const askForCoords = () => {\n    navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError)\n  }\n\n  const loadCoords = () => {\n    const loadedCoords = localStorage.getItem(\"coords\");\n    if (loadedCoords === null) {\n      askForCoords();\n    } else {\n      const parsedCoords = JSON.parse(loadedCoords);\n      getCurrentWeather(parsedCoords.latitude, parsedCoords.longitude);\n      getForecastWeather(parsedCoords.latitude, parsedCoords.longitude);\n    }\n  }\n  useEffect(() => {\n    loadCoords();\n  }, []);\n\n  return (\n    <div className=\"weather\">\n      <div className=\"weather-location\">\n        {current.location}\n      </div>\n      <div className=\"weather-content\">\n        <div className=\"current-weather\">\n          <img className=\"current-icon\" src={current.icon} alt=\"\"/>\n          <div className=\"current-text\">\n            <div className=\"current-temp\">{current.temp}&#176;</div>\n            <div className=\"current-description\">{current.description}</div>\n          </div>\n        </div>\n        <ul className=\"forecast-weather\">\n          {!forecast[0] ? [] : forecast.map(item => {\n            return <li key={item.id}>\n              <div className=\"forecast-day\">{item.day}</div>\n              <img className=\"forecast-icon\" src={item.icon} alt=\"\"/>\n              <div className=\"forecast-maxtemp\">{item.maxTemp}&#176;</div>\n              <div className=\"forecast-mintemp\">{item.minTemp}&#176;</div>\n            </li>\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;","import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst TODOS_LS = \"toDos\"\nconst loadedToDos = localStorage.getItem(TODOS_LS) ? JSON.parse(localStorage.getItem(TODOS_LS)) : [];\n\nconst toDos = createSlice({\n  name: \"toDoReducer\",\n  initialState: [],\n  reducers: {\n    addToDo: (state, action) => {\n      return [{ text: action.payload, id: Date.now(), completed: false }, ...state];\n    },\n    deleteToDo: (state, action) => {\n      return state.filter(toDo => toDo.id !== action.payload)\n    },\n    completeToDo: (state, action) => {\n      return state.map(toDo => {\n        if (toDo.id === action.payload) {\n          return {\n            ...toDo,\n            completed: !toDo.completed\n          }\n        }\n        return toDo;\n      })\n    }\n  }\n});\n\nconst store = createStore(toDos.reducer, loadedToDos);\n\nexport const {\n  addToDo,\n  deleteToDo,\n  completeToDo\n} = toDos.actions;\n\nconst saveLocalStorage = () => {\n  const toDos = store.getState();\n  localStorage.setItem(TODOS_LS, JSON.stringify(toDos));\n}\n\nstore.subscribe(() => {\n  saveLocalStorage();\n});\n\nexport default store;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { deleteToDo, completeToDo } from \"./store\";\nimport { FaCheck, FaTrash } from \"react-icons/fa\";\nimport \"./ToDoList.css\"\n\nconst ToDo = ({ text, completed, deleteToDo, completeToDo }) => {\n  return (\n    <li>\n      <span className={completed ? \"completed\" : null}>{text}</span>\n      <button onClick={completeToDo}><FaCheck /></button>\n      <button onClick={deleteToDo}><FaTrash /></button>\n    </li>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    deleteToDo: () => dispatch(deleteToDo(ownProps.id)),\n    completeToDo: () => dispatch(completeToDo(ownProps.id))\n  };\n}\n\nexport default connect(null, mapDispatchToProps) (ToDo);","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { addToDo } from \"./store\";\nimport ToDo from \"./ToDo\";\nimport \"./ToDoList.css\"\nimport { FaPlusSquare } from \"react-icons/fa\";\n\nconst ToDoList = ({ toDos, addToDo }) => {\n  const [text, setText] = useState(\"\");\n\n  const onChange = e => {\n    setText(e.target.value);\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addToDo(text);\n    setText(\"\");\n  }\n\n  return (\n    <div className=\"todolist\">\n      <h2>ToDo List</h2>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={text} onChange={onChange} required/>\n        <button><FaPlusSquare /></button>\n      </form>\n      <ul className=\"todos\">\n        {toDos.map(toDo => (\n          <ToDo {...toDo} key={toDo.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return { toDos: state };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToDo: text => dispatch(addToDo(text))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ToDoList);","import React from 'react';\nimport './Links.css';\nimport { FaGoogle, FaYoutube, FaGithub } from 'react-icons/fa';\nimport { SiGmail } from \"react-icons/si\";\n\nconst Links = () => {\n  return (\n    <div className=\"links\">\n      <a href=\"https://www.google.com/\" target=\"_blank\" rel=\"noreferrer\"><FaGoogle className=\"link\"/></a>\n      <a href=\"https://mail.google.com/\" target=\"_blank\" rel=\"noreferrer\"><SiGmail className=\"link\"/></a>\n      <a href=\"https://www.github.com/\" target=\"_blank\" rel=\"noreferrer\"><FaGithub className=\"link\"/></a>\n      <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"noreferrer\"><FaYoutube className=\"link\"/></a>\n    </div>\n  );\n}\n\nexport default Links;","import React from 'react';\nimport './App.css';\nimport Clock from \"./components/Clock\";\nimport TodayCalendar from \"./components/TodayCalendar\";\nimport Weather from \"./components/Weather\";\nimport ToDoList from \"./components/ToDoList/ToDoList\";\nimport Links from \"./components/Links\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Links></Links>\n      <ToDoList></ToDoList>\n      <Clock></Clock>\n      <div className=\"calender-weather-wrapper\">\n        <TodayCalendar></TodayCalendar>\n        <Weather></Weather>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./components/ToDoList/store\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}